{
  "node_list": [
    {
      // Node 0
      "module": "zooshi",
      "name": "advance_frame"
    },
    {
      // Node 1
      "module": "zooshi",
      "name": "player_entity"
    },
    {
      // Node 2
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.PatronsFed"
          }
        }
      ]
    },
    {
      // Node 3
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.TargetScore"
          }
        }
      ]
    },
    {
      // Node 4
      "module": "float_math",
      "name": "greater_than_or_equals",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 3,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 5
      "module": "logic",
      "name": "if",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 4,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 6
      "module": "entity",
      "name": "graph_entity"
    },
    {
      // Node 7
      "module": "animation",
      "name": "animation_index",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0, // trigger: when patron just got fed
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 8: Gate's last played animation index < kSceneryDisappear
      "module": "integer_math",
      "name": "less_than",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 7, // Gate's last played animation index
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": 3 // = kSceneryDisappear
          }
        }
      ]
    },
    {
      // Node 9:  Gate's last played animation index < kSceneryDisappear &&
      //          PatronsFed >= TargetScore
      "module": "logic",
      "name": "and",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 8, // Gate's last animation index < kSceneryDisappear
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 4, // PatronsFed >= TargetScore
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 10: if (Gate's last played animation index < kSceneryDisappear &&
      //              PatronsFed >= TargetScore)
      "module": "logic",
      "name": "if",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 9,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 11: Play open gate animation on Gate
      "module": "zooshi",
      "name": "set_show_override",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 10,  // "if"
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,  // Gate entity
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": 4 // open gate animation index
          }
        }
      ]
    }
  ]
}

