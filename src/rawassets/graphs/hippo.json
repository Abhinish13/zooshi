// When a collision with the entity's body occurs, play a sound effect.  When a
// collision with the entity's mouth occurs, increment the player's score and
// play a sound effect.
{
  "node_list": [
    {
      "module": "entity",
      "name": "graph_entity"
    },
    {
      "module": "physics",
      "name": "on_collision",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "physics",
      "name": "collision_data",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "string",
      "name": "equals",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 2
          }
        },
        {
          "edge_type": "String",
          "edge": {
            "value": "Body"
          }
        }
      ]
    },
    {
      "module": "logic",
      "name": "boolean_pulse",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 3,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "audio",
      "name": "play_sound",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 4,
            "edge_index": 0
          }
        },
        {
          "edge_type": "SoundHandle",
          "edge": {
            "value": "hit_char"
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 1
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 1.0
          }
        }
      ]
    },
    {
      "module": "string",
      "name": "equals",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 2
          }
        },
        {
          "edge_type": "String",
          "edge": {
            "value": "Mouth"
          }
        }
      ]
    },
    {
      "module": "logic",
      "name": "boolean_pulse",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 18,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "audio",
      "name": "play_sound",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 7,
            "edge_index": 0
          }
        },
        {
          "edge_type": "SoundHandle",
          "edge": {
            "value": "fed_hippo"
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 1
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 1.0
          }
        }
      ]
    },
    {
      "module": "entity",
      "name": "player_entity",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 7,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "attributes",
      "name": "attributes",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 9,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 10,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.PatronsFed"
          }
        }
      ]
    },
    {
      "module": "float_math",
      "name": "add",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 11,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 1.0
          }
        }
      ]
    },
    {
      "module": "attributes",
      "name": "set_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 10,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.PatronsFed"
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 12,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 14: Set flag for the patron.
      "module": "player",
      "name": "fed_patron",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6, // Hit flag.
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 9, // Player entity.
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2, // Collision target.
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 15: Check condition.
      "module": "player",
      "name": "check_all_patrons_fed",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 9, // Player entity.
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 16: Grant achievement if the condition met.
      "module": "gpg",
      "name": "grant_achievement",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 15,
            "edge_index": 0
          }
        },
        {
          "edge_type": "String",
          "edge": {
            "value": "AllYouCanEat"
          }
        }
      ]
    },
    {
      "module": "patron",
      "name": "patron_upright",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        }
      ]
    },
    {
      "module": "logic",
      "name": "and",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 17,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        }
      ]
    }
  ]
}
