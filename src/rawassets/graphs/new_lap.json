// When a new lap occurs, check the score. If the score is greater than the
// target score, increase speed, set a higher target, and keep going. If the
// score is not higher than the target, end the game.
{
  "node_list": [
    {
      // Node 0
      "module": "zooshi",
      "name": "raft_entity"
    },
    {
      // Node 1
      "module": "rail_denizen",
      "name": "new_lap",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 2
      "module": "zooshi",
      "name": "player_entity"
    },
    {
      // Node 3
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.PatronsFed"
          }
        }
      ]
    },
    {
      // Node 4
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.TargetScore"
          }
        }
      ]
    },
    {
      // Node 5
      "module": "float_math",
      "name": "greater_than_or_equals",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 3,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 4,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 6
      "module": "logic",
      "name": "if",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 5,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 7
      "module": "rail_denizen",
      "name": "get_rail_speed",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 8
      "module": "float_math",
      "name": "add",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 7,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 2
          }
        }
      ]
    },
    {
      // Node 9
      "module": "rail_denizen",
      "name": "set_rail_speed",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 19,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 10
      "module": "float_math",
      "name": "add",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 3,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 22,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 11
      "module": "attributes",
      "name": "set_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.TargetScore"
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 10,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 12
      "module": "game_state",
      "name": "request_state",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 1
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": 6 // Game over screen(kGameStateGameOver).
          }
        }
      ]
    },
    {
      // Node 13: Check condition.
      "module": "patron",
      "name": "check_delicious_cycle",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 1, // void input.
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 0, // Raft ref.
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 14: Grant achievement if the condition met.
      "module": "gpg",
      "name": "grant_achievement",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 13,
            "edge_index": 0
          }
        },
        {
          "edge_type": "String",
          "edge": {
            "value": "ADeliciousCycle"
          }
        }
      ]
    },
    {
      // Node 15
      "module": "audio",
      "name": "play_sound",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "SoundHandle",
          "edge": {
            "value": "successful_lap"
          }
        },
        {
          "edge_type": "Vec3",
          "edge": {
            "value": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 1.0
          }
        }
      ]
    },
    {
      // Node 16
      "module": "audio",
      "name": "play_sound",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 1
          }
        },
        {
          "edge_type": "SoundHandle",
          "edge": {
            "value": "unsuccessful_lap"
          }
        },
        {
          "edge_type": "Vec3",
          "edge": {
            "value": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            }
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 1.0
          }
        }
      ]
    },
    {
      // Node 17
      "module": "float_math",
      "name": "divide",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 8,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 2
          }
        }
      ]
    },
    {
      // Node 18
      "module": "float_math",
      "name": "add",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 7,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 0.2
          }
        }
      ]
    },
    {
      // Node 19
      "module": "float_math",
      "name": "min",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 17,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 18,
            "edge_index": 0
          }
        }
      ]
    },
    {
      // Node 20
      "module": "attributes",
      "name": "get_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.TargetScoreIncrease"
          }
        }
      ]
    },
    {
      // Node 21
      "module": "float_math",
      "name": "add",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 20,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 2
          }
        }
      ]
    },
    {
      // Node 22
      "module": "float_math",
      "name": "min",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 21,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Float",
          "edge": {
            "value": 40
          }
        }
      ]
    },
    {
      // Node 23
      "module": "attributes",
      "name": "set_attribute",
      "input_edge_list": [
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 6,
            "edge_index": 0
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 2,
            "edge_index": 0
          }
        },
        {
          "edge_type": "Int",
          "edge": {
            "value": "fpl.zooshi.AttributeDef.TargetScoreIncrease"
          }
        },
        {
          "edge_type": "OutputEdgeTarget",
          "edge": {
            "node_index": 22,
            "edge_index": 0
          }
        }
      ]
    }
  ]
}
